openapi: 3.0.0
info:
  title: Sistem Monev API
  description: API untuk manajemen desa wisata.
  version: 1.0.0
servers:
  - url: http://localhost:5000
tags:
  - name: Authentication
    description: Operasi terkait autentikasi
  - name: Kategori Desa Wisata
    description: Operasi terkait kategori desa wisata
  - name: Desa Wisata
    description: Operasi terkait manajemen desa wisata
  - name: Deskripsi Wisata
    description: Operasi terkait deskripsi wisata
  - name: Status Desa
    description: Operasi terkait status desa wisata

paths:
  /authentication/register:
    post:
      tags:
        - Authentication
      summary: Registrasi pengguna baru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                fullName:
                  type: string
                  example: John Doe
                email:
                  type: string
                  format: email
                  example: johndoe@example.com
                password:
                  type: string
                  format: password
                  example: password123
                confirmPassword:
                  type: string
                  format: password
                  example: password123
                role:
                  type: string
                  enum: [pengguna, pengelola, dinas, admin]
                  example: pengelola
              required:
                - username
                - fullName
                - email
                - password
                - confirmPassword
      responses:
        '201':
          description: Akun berhasil dibuat. Menunggu verifikasi admin.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Akun berhasil dibuat. Menunggu verifikasi dari admin.
        '400':
          description: Data input tidak valid
        '409':
          description: Username atau email sudah digunakan

  /authentication/login:
    post:
      tags: 
        - Authentication
      summary: Login pengguna
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required: [email, password]
      responses:
        '200':
          description: Login berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Validasi gagal
        '401':
          description: Email atau password salah
        '403':
          description: Akun belum diverifikasi
        '404':
          description: Email tidak terdaftar

  /authentication/logout:
    post:
      tags:
        - Authentication
      summary: Logout pengguna
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout berhasil
        '401':
          description: Tidak terautentikasi

  /authentication/verify/{email}:
    put:
      tags:
        - Authentication
      summary: Verifikasi akun pengguna (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          description: Email pengguna yang akan diverifikasi
      responses:
        '200':
          description: Akun berhasil diverifikasi
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Akun pengguna berhasil diverifikasi dan email telah dikirim
        '404':
          description: Pengguna tidak ditemukan atau sudah diverifikasi
        '500':
          description: Gagal mengirim email verifikasi

  /api/kategori:
    get:
      tags:
        - Kategori Desa Wisata
      summary: Dapatkan semua kategori desa wisata
      responses:
        '200':
          description: Data kategori berhasil diambil
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KategoriDesaWisata'
    post:
      tags:
        - Kategori Desa Wisata
      summary: Tambahkan kategori baru
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KategoriDesaWisataInput'
      responses:
        '201':
          description: Kategori berhasil ditambahkan
        '401':
          description: Akses ditolak. Token tidak ditemukan.
        '403':
          description: Hanya role "dinas" yang dapat menambahkan kategori

  /api/kategori/{kd_kategori_desa_wisata}:
    put:
      tags:
        - Kategori Desa Wisata
      summary: Perbarui data kategori berdasarkan ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: kd_kategori_desa_wisata
          required: true
          schema:
            type: string
          description: Kode unik kategori desa wisata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_kategori:
                  type: string
                nilai:
                  type: integer
      responses:
        '200':
          description: Kategori berhasil diperbarui
        '401':
          description: Akses ditolak. Token tidak ditemukan.
        '403':
          description: Hanya role "dinas" yang dapat memperbarui kategori
        '404':
          description: Kategori tidak ditemukan

    delete:
      tags:
        - Kategori Desa Wisata
      summary: Hapus kategori berdasarkan ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: kd_kategori_desa_wisata
          required: true
          schema:
            type: string
          description: Kode unik kategori desa wisata
      responses:
        '200':
          description: Kategori berhasil dihapus
        '401':
          description: Akses ditolak. Token tidak ditemukan.
        '403':
          description: Hanya role "dinas" yang dapat menghapus kategori
        '404':
          description: Kategori tidak ditemukan

  /api/desa-wisata:
    post:
      tags:
        - Desa Wisata
      summary: Tambahkan desa wisata baru
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesaWisataInput'
      responses:
        '201':
          description: Desa wisata berhasil ditambahkan dan sedang dalam proses tinjauan admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Desa wisata berhasil ditambahkan dan sedang dalam proses tinjauan admin
        '400':
          description: Data input tidak valid
        '401':
          description: Akses ditolak. Token tidak ditemukan.
        '403':
          description: Hanya role "pengelola" yang dapat menambahkan desa wisata
        '409':
          description: Kode desa wisata sudah digunakan
        '500':
          description: Internal server error

    get:
      tags:
        - Desa Wisata
      summary: Dapatkan semua data desa wisata
      responses:
        '200':
          description: Data desa wisata berhasil diambil
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: '#/components/schemas/DesaWisata'
        '500':
          description: Internal server error

  /api/desa-wisata/kategori/{kd_kategori_desa_wisata}:
    get:
      tags:
        - Desa Wisata
      summary: Dapatkan semua desa wisata berdasarkan kategori
      parameters:
        - in: path
          name: kd_kategori_desa_wisata
          required: true
          schema:
            type: string
          description: Kode unik kategori desa wisata
      responses:
        '200':
          description: Data desa wisata berdasarkan kategori berhasil diambil
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DesaWisata'
        '404':
          description: Kategori tidak ditemukan
        '500':
          description: Internal server error

  /api/desa-wisata/{kd_desa}:
    get:
      tags:
        - Desa Wisata
      summary: Dapatkan detail desa wisata berdasarkan ID
      parameters:
        - in: path
          name: kd_desa
          required: true
          schema:
            type: string
          description: Kode unik desa wisata
      responses:
        '200':
          description: Data desa wisata berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesaWisata'
        '404':
          description: Desa wisata tidak ditemukan
        '500':
          description: Internal server error

    put:
      tags:
        - Desa Wisata
      summary: Perbarui data desa wisata berdasarkan ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: kd_desa
          required: true
          schema:
            type: string
          description: Kode unik desa wisata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesaWisataInput'
      responses:
        '200':
          description: Desa wisata berhasil diperbarui
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Desa wisata berhasil diperbarui
        '400':
          description: Data input tidak valid
        '401':
          description: Akses ditolak. Token tidak ditemukan.
        '403':
          description: Hanya role "pengelola" yang dapat memperbarui desa wisata
        '404':
          description: Desa wisata tidak ditemukan
        '500':
          description: Internal server error

    delete:
      tags:
        - Desa Wisata
      summary: Hapus desa wisata berdasarkan ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: kd_desa
          required: true
          schema:
            type: string
          description: Kode unik desa wisata
      responses:
        '200':
          description: Desa wisata berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Desa wisata berhasil dihapus
        '401':
          description: Akses ditolak. Token tidak ditemukan.
        '403':
          description: Hanya role "pengelola" yang dapat menghapus desa wisata
        '404':
          description: Desa wisata tidak ditemukan
        '500':
          description: Internal server error

  /api/deskripsi-wisata:
    post:
      tags:
        - Deskripsi Wisata
      summary: Tambahkan deskripsi wisata baru
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeskripsiWisata'
      responses:
        '201':
          description: Deskripsi wisata berhasil ditambahkan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Deskripsi wisata berhasil ditambahkan
                  data:
                    type: object
                    properties:
                      kd_desa:
                        type: string
        '400':
          description: Data input tidak valid
        '401':
          description: Akses ditolak. Token tidak ditemukan.
        '403':
          description: Hanya role "pengelola" yang dapat menambahkan deskripsi wisata
        '404':
          description: Desa wisata tidak ditemukan
        '500':
          description: Internal server error

    get:
      tags:
        - Deskripsi Wisata
      summary: Dapatkan semua deskripsi wisata
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Nomor halaman
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Jumlah item per halaman
        - in: query
          name: with_desa
          schema:
            type: boolean
            default: false
          description: Sertakan data desa wisata terkait
      responses:
        '200':
          description: Data deskripsi wisata berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DeskripsiWisata'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      pages:
                        type: integer
        '500':
          description: Internal server error

  /api/deskripsi-wisata/{kd_desa}:
    get:
      tags:
        - Deskripsi Wisata
      summary: Dapatkan deskripsi wisata berdasarkan ID desa
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: kd_desa
          required: true
          schema:
            type: string
          description: Kode unik desa wisata
        - in: query
          name: with_desa
          schema:
            type: boolean
            default: false
          description: Sertakan data desa wisata terkait
      responses:
        '200':
          description: Data deskripsi wisata berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/DeskripsiWisata'
        '404':
          description: Deskripsi wisata tidak ditemukan
        '500':
          description: Internal server error

    put:
      tags:
        - Deskripsi Wisata
      summary: Perbarui deskripsi wisata berdasarkan ID desa
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: kd_desa
          required: true
          schema:
            type: string
          description: Kode unik desa wisata
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: JSON string berisi data deskripsi wisata
                atraksi:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Gambar atraksi (maks 20 file)
                penginapan:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Gambar penginapan (maks 20 file)
                paket_wisata:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Gambar paket wisata (maks 20 file)
                suvenir:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Gambar suvenir (maks 20 file)
      responses:
        '200':
          description: Deskripsi wisata berhasil diperbarui
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Deskripsi wisata berhasil diperbarui
                  data:
                    $ref: '#/components/schemas/DeskripsiWisata'
        '400':
          description: Data input tidak valid
        '401':
          description: Akses ditolak. Token tidak ditemukan.
        '403':
          description: Hanya role "pengelola" yang dapat memperbarui deskripsi wisata
        '404':
          description: Deskripsi wisata tidak ditemukan
        '500':
          description: Internal server error

    delete:
      tags:
        - Deskripsi Wisata
      summary: Hapus deskripsi wisata berdasarkan ID desa
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: kd_desa
          required: true
          schema:
            type: string
          description: Kode unik desa wisata
      responses:
        '200':
          description: Deskripsi wisata berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Deskripsi wisata dan semua gambarnya berhasil dihapus
        '401':
          description: Akses ditolak. Token tidak ditemukan.
        '403':
          description: Hanya role "pengelola" yang dapat menghapus deskripsi wisata
        '404':
          description: Deskripsi wisata tidak ditemukan
        '500':
          description: Internal server error

  /api/status-desa:
    post:
      tags:
        - Status Desa
      summary: Menambahkan status desa baru
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusDesa'
      responses:
        '201':
          description: Status desa berhasil ditambahkan
        '400':
          description: Permintaan tidak valid
        '401':
          description: Akses ditolak. Token tidak ditemukan.
        '403':
          description: Hanya role "dinas" yang dapat menambahkan deskripsi wisata
        '404':
          description: Desa wisata tidak ditemukan
        '500':
          description: Internal server error

    get:
      tags:
        - Status Desa
      summary: Mendapatkan semua status desa
      responses:
        '200':
          description: Daftar status desa berhasil diambil
        '500':
          description: Internal server error

  /api/status-desa/{kd_status}:
    get:
      tags:
        - Status Desa
      summary: Mendapatkan status desa berdasarkan kd_status
      parameters:
        - name: kd_status
          in: path
          required: true
          schema:
            type: string
            example: STATUS001
      responses:
        '200':
          description: Status desa berhasil diambil
        '404':
          description: Status desa tidak ditemukan
        '500':
          description: Internal server error

    put:
      tags:
        - Status Desa
      summary: Memperbarui status desa berdasarkan kd_status
      security:
        - bearerAuth: []
      parameters:
        - name: kd_status
          in: path
          required: true
          schema:
            type: string
            example: STATUS001
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [aktif, perbaikan, tidak aktif, kurang terawat]
                  example: perbaikan
                keterangan:
                  type: string
                  example: Desa wisata sedang dalam perbaikan.
              required:
                - status
                - keterangan
      responses:
        '200':
          description: Status desa berhasil diperbarui
        '401':
          description: Akses ditolak. Token tidak ditemukan.
        '403':
          description: Hanya role "pengelola" yang dapat menambahkan deskripsi wisata
        '404':
          description: Status desa tidak ditemukan
        '500':
          description: Internal server error

    delete:
      tags:
        - Status Desa
      summary: Menghapus status desa berdasarkan kd_status
      security:
        - bearerAuth: []
      parameters:
        - name: kd_status
          in: path
          required: true
          schema:
            type: string
            example: STATUS001
      responses:
        '200':
          description: Status desa berhasil dihapus
        '401':
          description: Akses ditolak. Token tidak ditemukan.
        '403':
          description: Hanya role "pengelola" yang dapat menambahkan deskripsi wisata
        '404':
          description: Status desa tidak ditemukan
        '500':
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: "ID unik pengguna"
        username:
          type: string
          example: "johndoe"
          description: "Username pengguna"
        full_name:
          type: string
          example: "John Doe"
          description: "Nama lengkap pengguna"
        email:
          type: string
          example: "johndoe@example.com"
          description: "Email pengguna"
        role:
          type: string
          example: "user"
          enum:
            - user
            - admin
            - dinas
          description: "Peran pengguna dalam sistem"
        is_verified:
          type: boolean
          example: false
          description: "Status verifikasi akun oleh admin"
        created_at:
          type: string
          format: date-time
          example: "2025-04-05T12:34:56Z"
          description: "Tanggal dan waktu pembuatan akun"
      required:
        - id
        - username
        - full_name
        - email
        - role
        - is_verified
        - created_at

    KategoriDesaWisata:
      type: object
      properties:
        kd_kategori_desa_wisata:
          type: string
          example: KAT001
        nama_kategori:
          type: string
          example: Wisata Alam
        nilai:
          type: integer
          example: 85
      required:
        - kd_kategori_desa_wisata
        - nama_kategori
        - nilai

    KategoriDesaWisataInput:
      type: object
      properties:
        nama_kategori:
          type: string
          example: Wisata Alam
        nilai:
          type: integer
          example: 85
      required:
        - kd_kategori_desa_wisata
        - nama_kategori
        - nilai

    DesaWisata:
      type: object
      properties:
        kd_desa:
          type: string
          example: DES001
        provinsi:
          type: string
          example: Jawa Barat
        kabupaten:
          type: string
          example: Bandung
        nama_desa:
          type: string
          example: Desa Wisata Lembang
        nama_popular:
          type: string
          example: Lembang Park & Zoo
        alamat:
          type: string
          example: Jl. Grand Hotel No.33E, Lembang, Kabupaten Bandung Barat
        pengelola:
          type: string
          example: PT Lembang Park
        nomor_telepon:
          type: string
          example: 081234567890
        email:
          type: string
          format: email
          example: info@lembangpark.com
        kd_kategori_desa_wisata:
          type: string
          example: KAT001
        status:
          type: string
          example: aktif
        keterangan:
          type: string
          example: Desa wisata telah aktif.
        kd_permintaan:
          type: string
          example: REQ12345
        status_permintaan:
          type: string
          example: diproses

    DesaWisataInput:
      type: object
      properties:
        provinsi:
          type: string
          example: Jawa Barat
        kabupaten:
          type: string
          example: Bandung
        nama_desa:
          type: string
          example: Desa Wisata Lembang
        nama_popular:
          type: string
          example: Lembang Park & Zoo
        alamat:
          type: string
          example: Jl. Grand Hotel No.33E, Lembang, Kabupaten Bandung Barat
        pengelola:
          type: string
          example: PT Lembang Park
        nomor_telepon:
          type: string
          example: 081234567890
        email:
          type: string
          format: email
          example: info@lembangpark.com
        kd_kategori_desa_wisata:
          type: string
          example: KAT001
      required:
        - kd_desa
        - provinsi
        - kabupaten
        - nama_desa
        - alamat
        - pengelola
        - nomor_telepon
        - email
        - kd_kategori_desa_wisata

    DeskripsiWisata:
      type: object
      properties:
        kd_desa:
          type: string
          example: DES001
        penjelasan_umum:
          type: string
          example: Desa wisata dengan pemandangan alam yang indah...
        fasilitas:
          type: string
          example: Area parkir luas, toilet bersih, tempat ibadah...
        dokumentasi_desa:
          type: string
          example: Dokumentasi kegiatan desa wisata...
        atraksi:
          type: array
          items:
            type: object
            properties:
              gambar_atraksi:
                type: string
                format: uri
              nama_atraksi:
                type: string
              kategori_atraksi:
                type: string
        penginapan:
          type: array
          items:
            type: object
            properties:
              gambar_penginapan:
                type: string
                format: uri
              nama_penginapan:
                type: string
              harga_penginapan:
                type: number
        paket_wisata:
          type: array
          items:
            type: object
            properties:
              gambar_paket_wisata:
                type: string
                format: uri
              nama_paket_wisata:
                type: string
              harga_paket_wisata:
                type: number
        suvenir:
          type: array
          items:
            type: object
            properties:
              gambar_suvenir:
                type: string
                format: uri
              nama_suvenir:
                type: string
              harga_suvenir:
                type: number
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        nama_desa:
          type: string
          example: Desa Wisata Lembang
        lokasi:
          type: string
          example: Lembang, Bandung Barat
        deskripsi_singkat:
          type: string
          example: Desa wisata dengan pemandangan alam indah

    Permintaan:
      type: object
      properties:
        kd_permintaan:
          type: string
          example: "REQ001"
          description: "Kode unik permintaan"
        email:
          type: string
          example: "user@example.com"
          description: "Email pengguna yang mengajukan"
        kd_desa:
          type: string
          example: "DES001"
          description: "Kode desa wisata yang diajukan"
        status_permintaan:
          type: string
          example: "diproses"
          enum:
            - diterima
            - diproses
            - selesai
            - ditolak
          description: "Status dari permintaan"
        created_at:
          type: string
          format: date-time
          example: "2025-04-05T12:34:56Z"
          description: "Tanggal permintaan dibuat"

      required:
        - kd_permintaan
        - email
        - kd_desa
        - status_permintaan

    StatusDesa:
      type: object
      properties:
        kd_desa:
          type: string
          example: "DES001"
          description: "Referensi kode desa wisata"
        status:
          type: string
          example: "aktif"
          enum:
            - aktif
            - nonaktif
            - ditinjau
          description: "Status desa wisata"
        keterangan:
          type: string
          example: "Desa wisata sedang dalam proses peninjauan"
          description: "Deskripsi tambahan tentang status"
        tanggal_update:
          type: string
          format: date-time
          example: "2025-04-05T12:34:56Z"
          description: "Waktu terakhir status diperbarui"

      required:
        - kd_status
        - kd_desa
        - status
        - tanggal_update